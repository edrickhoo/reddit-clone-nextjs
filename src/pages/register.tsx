import Head from "next/head";
import Image from "next/image";
import { useForm } from "react-hook-form";
import { UserContext } from "@/context/UserContext";
import { useContext, useEffect } from "react";
import { cookies, RegisterDto, registerUser } from "@/api/subredditApi";
import router, { useRouter } from "next/router";
import Header from "@/components/Header";
import { useMutation } from "react-query";
import Link from "next/link";
import LoadingSpinner from "@/components/LoadingSpinner";

const Register = () => {
  const [user, setUser] = useContext(UserContext);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<RegisterDto>();
  const router = useRouter();

  useEffect(() => {
    console.log(user);
  }, [user]);

  const { mutate, isLoading, isSuccess } = useMutation(registerUser, {
    onSuccess: (data) => {
      setTimeout(() => {
        router.push("/");
      }, 5000);
    },
  });

  const onSubmit = async (data: RegisterDto) => {
    try {
      mutate(data);
    } catch (e) {
      console.log(e);
    }
  };

  if (isSuccess) {
    return (
      <div className="flex justify-center items-center h-[100vh] relative">
        <p className="bg-white rounded-md p-8 space-y-4">
          Please verify email by clicking verification through email <br />
          Redirecting in 5...
        </p>
        <div className="absolute h-full w-full bg-black/30 z-[-1]"></div>
      </div>
    );
  }

  return (
    <div className="flex justify-center items-center h-[100vh] relative">
      <div className="bg-white rounded-md p-8 space-y-4">
        <div>
          <span className="text-lg">Sign Up</span>
        </div>
        <form
          className="flex flex-col space-y-3"
          onSubmit={handleSubmit(onSubmit)}
        >
          <input
            {...register("username", { required: true })}
            type="text"
            placeholder="Username"
            className="px-2 py-1 rounded-full bg-slate-100 focus:outline-1 outline-slate-500"
          />
          {errors.username?.type === "required" && (
            <p className="text-red-600" role="alert">
              Username is required
            </p>
          )}
          <input
            {...register("email", {
              required: true,
              pattern:
                /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/,
            })}
            type="text"
            placeholder="Email"
            className="px-2 py-1 rounded-full bg-slate-100 focus:outline-1 outline-slate-500"
          />
          {errors.email?.type === "required" && (
            <p className="text-red-600" role="alert">
              Email is required
            </p>
          )}
          {errors.email?.type === "pattern" && (
            <p className="text-red-600" role="alert">
              Invalid example@ex.com
            </p>
          )}
          <input
            {...register("password", { required: true })}
            type="password"
            placeholder="Password"
            className="px-2 py-1 rounded-full bg-slate-100 focus:outline-1 outline-slate-500"
          />
          {errors.password?.type === "required" && (
            <p className="text-red-600" role="alert">
              Password is required
            </p>
          )}

          <button
            disabled={isLoading}
            className="rounded-full text-white bg-orange-600 hover:bg-orange-500 py-2"
          >
            {isLoading ? <LoadingSpinner size={10} /> : "Sign up"}
          </button>
        </form>

        <div>
          <span>
            Existing User
            <Link className="text-blue-500 hover:text-blue-600" href="/login">
              Log In
            </Link>
          </span>
        </div>
      </div>
      <div className="absolute h-full w-full bg-black/30 z-[-1]"></div>
    </div>
  );
};

export default function RegisterPage() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main>
        <Register />
      </main>
    </>
  );
}
